---
// No props needed for this component
---

<button 
  id="back-to-top"
  class="fixed bottom-8 right-8 bg-accent hover:bg-accent-dark text-white p-3 rounded-full shadow-lg opacity-0 invisible transition-all duration-300 transform translate-y-4"
  aria-label="Back to top"
>
  <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18" />
  </svg>
</button>

<script>
  // Show/hide back to top button based on scroll position
  const backToTopButton = document.getElementById('back-to-top');
  
  window.addEventListener('scroll', () => {
    if (window.pageYOffset > 300) {
      backToTopButton.classList.remove('opacity-0', 'invisible', 'translate-y-4');
      backToTopButton.classList.add('opacity-100', 'visible', 'translate-y-0');
    } else {
      backToTopButton.classList.add('opacity-0', 'invisible', 'translate-y-4');
      backToTopButton.classList.remove('opacity-100', 'visible', 'translate-y-0');
    }
  });
  
  // Smooth scroll to top
  backToTopButton.addEventListener('click', (e) => {
    e.preventDefault();
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  });
  
  // Smooth scroll for anchor links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const targetId = this.getAttribute('href');
      if (targetId === '#') return;
      
      const targetElement = document.querySelector(targetId);
      if (targetElement) {
        window.scrollTo({
          top: targetElement.offsetTop - 80, // Offset for fixed header if any
          behavior: 'smooth'
        });
      }
    });
  });
</script>
