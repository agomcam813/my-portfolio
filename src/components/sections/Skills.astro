---
import Section from "@/components/Section.astro";
import cv from '@cv';


// Extract data from CV
const { skills = [], languages = [], interests = [], awards = [], certificates = [] } = cv;

// No agrupamos por categorías, usamos todas las habilidades directamente
const allCertificates = [...(certificates || []), ...(awards || [])].sort((a, b) => 
  new Date(b.date || 0).getTime() - new Date(a.date || 0).getTime()
);

// Function for animation delay
const getDelay = (index, base = 0) => `${base + (index * 50)}ms`;

// Function to get fluency level as percentage
const getFluencyPercentage = (fluency) => {
  switch(fluency?.toLowerCase()) {
    case 'native': return '100%';
    case 'fluent': return '90%';
    case 'intermediate': return '65%';
    case 'basic': return '40%';
    default: return '50%';
  }
};
---

<Section title="Skills">
    <div class="grid grid-cols-1 md:grid-cols-2 gap-12">
        {/* Left column - Technical skills */}
        <div class="space-y-10">
            <div>
                <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
                    Technical Skills
                </h3>
                
                <div class="space-y-6">
                    {skills.map((category, categoryIndex) => (
                        <div key={category.name} data-animate-on-load style={`--delay: ${getDelay(categoryIndex, 100)}`}>
                            <h4 class="text-lg font-medium text-gray-700 dark:text-gray-300 mb-3">
                                {category.name}
                            </h4>
                            <div class="flex flex-wrap gap-2">
                                {category.keywords.map((keyword, keywordIndex) => (
                                    <span 
                                        key={keyword}
                                        class="px-3 py-1.5 bg-gray-100 dark:bg-gray-800 rounded-full text-sm text-gray-800 dark:text-gray-200 border border-gray-200 dark:border-gray-700 hover:bg-accent/10 dark:hover:bg-accent/10 hover:border-accent/30 hover:text-accent dark:hover:text-accent transition-colors"
                                        title={keyword}
                                        style={`--delay: ${getDelay(keywordIndex, 50)}`}
                                        data-animate-on-load
                                    >
                                        {keyword}
                                    </span>
                                ))}
                            </div>
                        </div>
                    ))}
                </div>
            </div>
        </div>
        
        {/* Right column - Languages and more */}
        <div class="space-y-10">
            {/* Languages */}
            {languages && languages.length > 0 && (
                <div data-animate-on-load style="--delay: 100ms">
                    <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
                        Languages
                    </h3>
                    <div class="space-y-3">
                        {languages.map((language, index) => (
                            <div key={language.language} class="flex flex-col">
                                <div class="flex justify-between items-center">
                                    <span class="font-medium text-gray-700 dark:text-gray-300">
                                        {language.language}
                                    </span>
                                    <span class="text-sm px-3 py-1 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300">
                                        {language.fluency}
                                    </span>
                                </div>
                                {language.language.toLowerCase() !== 'spanish' && language.language.toLowerCase() !== 'español' && (
                                    <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 mt-2">
                                        <div 
                                            class="bg-accent h-2.5 rounded-full transition-all duration-500 ease-in-out" 
                                            style={`width: ${getFluencyPercentage(language.fluency)}`}
                                            data-animate-on-load
                                        ></div>
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            )}
            
            {/* Interests */}
            {interests && interests.length > 0 && (
                <div data-animate-on-load style="--delay: 200ms">
                    <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
                        Interests
                    </h3>
                    
                    <div class="flex flex-col gap-4">
                        {interests.map((interest) => (
                            <div>
                                <h4 class="text-lg font-medium text-gray-900 dark:text-white mb-2">{interest.name}</h4>
                                <div class="flex flex-wrap gap-2">
                                    {interest.keywords.map((keyword) => (
                                        <span 
                                            key={keyword}
                                            class="px-3 py-1 bg-gray-100 dark:bg-gray-800/50 rounded-full text-sm text-gray-800 dark:text-gray-200 border border-gray-200 dark:border-gray-700/50 hover:bg-accent/10 hover:border-accent/30 hover:text-accent dark:hover:text-accent transition-colors"
                                        >
                                            {keyword}
                                        </span>
                                    ))}
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            )}
            
            {/* Certifications & Awards */}
            {allCertificates.length > 0 && (
                <div data-animate-on-load style="--delay: 300ms">
                    <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">
                        Certifications & Awards
                    </h3>
                    
                    <div class="space-y-4">
                        {allCertificates.map((certificate, index) => (
                            <div 
                                key={`${certificate.name}-${index}`}
                                class="relative pl-5 border-l-2 border-gray-200 dark:border-gray-800 hover:border-accent/50 transition-colors py-2"
                            >
                                <div class="absolute -left-[9px] top-4 w-3 h-3 rounded-full bg-white dark:bg-gray-900 border-2 border-accent"></div>
                                
                                <h4 class="font-medium text-gray-900 dark:text-gray-100">
                                    {certificate.name || certificate.title}
                                </h4>
                                {certificate.issuer && (
                                    <div class="text-sm text-gray-600 dark:text-gray-400 mt-1">{certificate.issuer}</div>
                                )}
                                {certificate.date && (
                                    <div class="text-xs text-gray-500 dark:text-gray-500 mt-1">
                                        {new Date(certificate.date).toLocaleDateString('en-US', { year: 'numeric', month: 'long' })}
                                    </div>
                                )}
                            </div>
                        ))}
                    </div>
                </div>
            )}
        </div>
    </div>
</Section>

<script>
    // Animate elements on scroll
    document.addEventListener('astro:page-load', () => {
        // Add class to document when ready
        document.documentElement.classList.add('js-interactive');
        
        // Animate elements on scroll
        const animateOnScroll = (entries, observer) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                    observer.unobserve(entry.target);
                }
            });
        };
        
        const observer = new IntersectionObserver(animateOnScroll, {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        });
        
        document.querySelectorAll('[data-animate-on-load]').forEach(element => {
            observer.observe(element);
        });
    });
</script>

<style>
    /* Custom animations */
    [data-animate-on-load] {
        opacity: 0;
        transform: translateY(20px);
        transition: opacity 0.6s ease-out, transform 0.6s ease-out;
        transition-delay: var(--delay, 0ms);
    }
    
    .js-interactivo [data-animate-on-load] {
        opacity: 1;
        transform: translateY(0);
    }
    
    /* Barra de desplazamiento personalizada */
    ::-webkit-scrollbar {
        width: 6px;
        height: 6px;
    }
    
    ::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 3px;
    }
    
    ::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 3px;
    }
    
    ::-webkit-scrollbar-thumb:hover {
        background: rgba(255, 255, 255, 0.2);
    }
</style>